{"version":3,"file":"trix.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/config/key_names.js","../src/trix/config/text_attributes.js","../src/trix/config/undo_interval.js","../src/trix/config.js","../src/trix/config/css.js","../src/trix/config/input.js","../src/trix/config/toolbar.js","../src/trix/global.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/constants.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/object_map.js","../src/trix/core/collections/element_store.js","../src/trix/core/utilities/operation.js","../src/trix/views/object_view.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/models/piece.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/models/document.js","../src/trix/models/html_sanitizer.js","../src/trix/models/html_parser.js","../src/trix/core/serialization.js","../src/trix/observers/mutation_observer.js","../src/trix/controllers/controller.js","../src/trix/operations/file_verification_operation.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n","export default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: (function() {\n    if (typeof InputEvent === \"undefined\") {\n      return false\n    }\n    for (const property of [ \"data\", \"getTargetRanges\", \"inputType\" ]) {\n      if (!(property in InputEvent.prototype)) {\n        return false\n      }\n    }\n    return true\n  })(),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","const undoInterval = 5000\nexport default undoInterval\n","import attachments from \"trix/config/attachments\"\nimport blockAttributes from \"trix/config/block_attributes\"\nimport browser from \"trix/config/browser\"\nimport css from \"trix/config/css\"\nimport fileSize from \"trix/config/file_size_formatting\"\nimport input from \"trix/config/input\"\nimport keyNames from \"trix/config/key_names\"\nimport lang from \"trix/config/lang\"\nimport textAttributes from \"trix/config/text_attributes\"\nimport toolbar from \"trix/config/toolbar\"\nimport undoInterval from \"trix/config/undo_interval\"\n\nconst config = {\n  attachments,\n  blockAttributes,\n  browser,\n  css,\n  fileSize,\n  input,\n  keyNames,\n  lang,\n  textAttributes,\n  toolbar,\n  undoInterval,\n}\n\nexport default config\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","import browser from \"trix/config/browser\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n}\n\nexport default input\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `\\\n<div class=\"trix-button-row\">\n  <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n  </span>\n\n  <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n  </span>\n\n  <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n  </span>\n\n  <span class=\"trix-button-group-spacer\"></span>\n\n  <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n    <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n  </span>\n</div>\n\n<div class=\"trix-dialogs\" data-trix-dialogs>\n  <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n    <div class=\"trix-dialog__link-fields\">\n      <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n      <div class=\"trix-button-group\">\n        <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n        <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n      </div>\n    </div>\n  </div>\n</div>\\\n`\n  },\n}\n","import { version } from \"../../package.json\"\nimport config from \"trix/config\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n}\n\nwindow.Trix = Trix\n\nexport default Trix\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in config.blockAttributes) {\n    const attributes = config.blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(input.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      input.value = string\n      return new FormData(form).get(input.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    keys.forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n","import config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","/* eslint-disable\n    no-undef,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  getCommonAttributes() {\n    const piece = pieceList.getPieceAtIndex(0)\n    if (!piece) return {}\n\n    let { attributes } = piece\n    let keys = attributes.getKeys()\n\n    pieceList.eachPiece(function(piece) {\n      keys = attributes.getKeysCommonToHash(piece.attributes)\n      attributes = attributes.slice(keys)\n    })\n\n    return attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice(attribute))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) {\n      return\n    }\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray()).map((block) => JSON.parse(block.text.toConsole()))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","/* eslint-disable\n    no-undef,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) {\n      return\n    }\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n          break\n        case \"td\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\" | \")\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) {\n      return\n    }\n    if (nodeIsAttachmentElement(element)) {\n      return\n    }\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) {\n      return\n    }\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) {\n      return\n    }\n    if (!stringIsAllBreakableWhitespace(node.data)) {\n      return\n    }\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) {\n      return\n    }\n    if (elementCanDisplayPreformattedText(parentNode)) {\n      return\n    }\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) {\n      return\n    }\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n      if (handler) {\n        this.withEvent(event, handler)\n        return this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      return selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        return this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransfer.files?.length) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"Files\") && clipboard.types.length === 1 && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import { removeNode } from \"trix/core/helpers\"\n\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) {\n      return\n    }\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    return (\n      (this.targetLocationRange != null\n        ? this.targetLocationRange\n        : this.getSelectionManager().getLocationRange(options)) || normalizeRange({ index: 0, offset: 0 })\n    )\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) {\n      return\n    }\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) {\n      return\n    }\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","export const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\nconst BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nclass Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) {\n      return\n    }\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) {\n      return\n    }\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","/* eslint-disable\n    id-length,\n*/\nimport config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) {\n      return\n    }\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undoInterval > 0) {\n      return Math.floor(new Date().getTime() / config.undoInterval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}\\\n`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n\nwindow.customElements.define(\"trix-toolbar\", TrixToolbarElement)\n","import config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}\\\n`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) {\n      return\n    }\n    if (event.target !== this.form) {\n      return\n    }\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n\nwindow.customElements.define(\"trix-editor\", TrixEditorElement)\n"],"names":["attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","_element$tagName","toLowerCase","composesExistingText","navigator","userAgent","forcesObjectResizing","supportsInputEvents","InputEvent","property","prototype","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","inheritable","parser","style","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","matchingSelector","closest","getAttribute","frozen","backgroundColor","config","attachments","preview","presentation","caption","name","size","file","blockAttributes","browser","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","fileSize","prefix","precision","formatter","base","exp","Math","floor","log","withoutInsignificantZeros","pow","toFixed","replace","input","level2Enabled","getLevel","textAttributes","toolbar","getDefaultHTML","undoInterval","Trix","VERSION","BasicObject","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","apply","call","arguments","match","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","value","fromUCS2String","toString","ucs2String","ucs2decode","codepoints","ucs2encode","constructor","length","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","fromCodepoints","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","hasStringCodePointAt","codePointAt","hasStringFromCodePoint","String","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","push","array","result","forEach","fromCharCode","join","id","TrixObject","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","key","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","splice","extend","properties","html","document","documentElement","matches","handleEvent","eventName","onElement","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","data","dataset","className","split","classList","add","textContent","childNodes","concat","childNode","appendChild","blockTagNames","getBlockTagNames","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","RTL_PATTERN","getDirection","dir","dirName","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","Object","keys","getTextConfig","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","body","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","domRangesAreEqual","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","reset","requestAnimationFrame","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","ObjectGroup","ungroupedObjects","depth","asTree","canBeGrouped","canBeGroupedWith","_group$canBeGroupedWi","_object$canBeGrouped2","groupObjects","getObjects","getDepth","ObjectMap","find","ElementStore","elements","getKey","trixStoreKey","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","callback","release","cancel","proxyMethod","ObjectView","childViews","rootView","getNodes","nodes","createNodes","cloneNode","invalidate","parentView","_this$parentView","invalidateViewForObject","findViewForObject","_this$findViewForObje","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","css","AttachmentView","uploadProgressDelegate","attachmentPiece","piece","createContentNodes","innerElement","figure","getClassName","getHref","tabindex","hasContent","innerHTML","getContent","createCaptionElement","isPending","progressElement","class","getUploadProgress","trixMutable","createCursorTarget","figcaption","getCaption","captionConfig","getCaptionConfig","getFilename","getFormattedFilesize","nameElement","createTextNode","sizeElement","names","getType","extension","getExtension","trixAttachment","trixContentType","getContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","type","_config$attachments$t","findProgressElement","_this$findElement","attachmentDidChangeUploadProgress","div","PreviewableAttachmentView","previewDelegate","image","src","refresh","super","updateAttributesForImage","getURL","previewURL","getPreviewURL","removeAttribute","serializedAttributes","width","getWidth","height","getHeight","storeKey","attachmentDidChangeAttributes","PieceView","getAttributes","textConfig","context","createAttachmentNodes","createStringNodes","_element","firstElementChild","findInnerElement","isPreviewable","_this$textConfig","iterable","substring","preserveSpaces","styles","pendingElement","styleProperty","isLast","isFirst","followsWhitespace","TextView","pieces","getPieces","lastIndex","endsWithWhitespace","previousPiece","hasAttribute","BlockView","block","createComment","getLastAttribute","_getBlockConfig","textView","shouldAddExtraNewlineElement","isRTL","getBlockBreakPosition","DocumentView","render","sync","elementStore","setDocument","shadowElement","getBlocks","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","lastChild","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","querySelectorAll","otherElement","ignoreSpaces","Piece","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","attribute","getAttributesHash","getCommonAttributes","pieceList","getPieceAtIndex","eachPiece","hasSameStringValueAsPiece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","getLength","canBeConsolidatedWith","ImagePreloadOperation","Image","onload","naturalWidth","naturalHeight","onerror","Attachment","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","setAttributes","newAttributes","delegate","_this$delegate","_this$delegate$attach","preloadURL","previewablePattern","getFilesize","_this$getFilename$mat","getFile","preloadFile","releasePreloadedFile","uploadProgress","setUploadProgress","_this$uploadProgressD","_this$uploadProgressD2","preloadingURL","setPreviewURL","_this$delegate2","attachmentDidChangePreviewURL","_this$delegate2$attac","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","_ref","catch","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","_piece$attachment","json","toConsole","registerType","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","notEmpty","copyWithPieceList","copyUsingObjectMap","objectMap","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachments","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","_text$pieceList","getPieceAtPosition","toSerializableText","Block","blockJSON","applyBlockBreakToText","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeLastValue","removeLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","isTerminalBlock","_getBlockConfig2","breaksOnReturn","_getBlockConfig3","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","textEndsInBlockBreak","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","Document","documentJSON","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","attachmentPieces","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","getBlockAttributes","currentBlock","_this$currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","elementCanDisplayPreformattedText","stringEndsWithWhitespace","_node$previousSibling","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","parseInt","getImageDimensions","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","attrConfig","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","unserializableAttributeNames","serializedAttributesSelector","blockCommentPattern","serializers","serializable","HTMLElement","el","mutableSelector","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","added","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","removed","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","Controller","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","InputController","mutationObserver","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","inputControllerDidRequestRender","_this$delegate$inputC","requestReparse","inputControllerDidRequestReparse","files","operations","all","handleInput","inputControllerWillAttachFiles","responder","insertFiles","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","keyNames","pastedFileCount","Level0InputController","resetInputSummary","setInputSummary","inputSummary","isComposing","inputControllerDidAllowUnhandledInput","mutationIsExpected","preferDocument","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","didDelete","unexpectedNewlineAddition","unexpectedNewlineDeletion","getSelectedRange","_this$responder","positionIsBlockBreak","textChanged","composedEmptyString","compositionInput","getEndData","getCompositionInput","CompositionInput","isEnded","deleteInDirection","serializeSelectionToDataTransfer","setData","dataTransferIsWritable","_this$responder3","getSelectedDocument","canAcceptDataTransfer","Files","getPastedHTMLUsingHiddenElement","selectedRange","pageXOffset","pageYOffset","opacity","focus","setSelectedRange","keydown","didInput","keyName","keyCode","modifier","_context","character","_this$delegate3","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","inputControllerWillPerformTyping","insertString","selectionIsExpanded","textInput","toUpperCase","dragenter","dragstart","draggedRange","_this$delegate5","inputControllerDidStartDrag","_this$delegate5$input","dragover","draggingPoint","x","clientX","y","clientY","_this$delegate6","inputControllerDidReceiveDragOverPoint","_this$delegate6$input","dragend","inputControllerDidCancelDrag","drop","_event$dataTransfer","point","setLocationRangeFromPointRange","inputControllerWillMoveText","moveTextFromRange","fromJSONString","insertDocument","cut","_this$responder14","clipboardData","inputControllerWillCutText","_this$responder15","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","inputControllerWillPaste","insertHTML","_this$delegate11","inputControllerDidPaste","items","_clipboard$items","_clipboard$items$","getAsFile","_clipboard$items$$get","extensionForFile","insertFile","compositionstart","compositionupdate","compositionend","beforeinput","stopPropagation","backspace","delete","return","_this$responder21","insertLineBreak","tab","_this$responder22","canIncreaseNestingLevel","selectionIsInCursorTarget","_this$responder24","moveCursorInDirection","_this$responder25","control","d","h","o","updatePosition","shift","_this$responder28","canDecreaseNestingLevel","expandSelectionInDirection","alt","_this$delegate27","meta","_this$delegate28","_file$type","_file$type$match","_$codePointAt","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","insertPlaceholder","_this$responder5","selectPlaceholder","forgetPlaceholder","canApplyToDocument","_this$responder8","Level2InputController","scheduledRender","composing","reparse","scheduleRender","cancelAnimationFrame","afterRender","withTargetDOMRange","toggleAttributeIfSupported","inputControllerWillPerformFormatting","_this$responder2","toggleCurrentAttribute","activateAttributeIfSupported","setCurrentAttribute","recordUndoEntry","_this$responder4","getTargetDOMRange","minLength","targetRanges","getTargetRanges","_this$event$getTarget","staticRangeToRange","withEvent","command","keyboardCommandFromKeyEvent","_this$delegate8","shiftKey","_event$clipboardData","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","_this$delegate10","_this$delegate12","inputTypes","inputType","selectionContainsAttachments","dragging","_this$responder9","pointFromEvent","dragEventHasFiles","_this$responder10","ArrowLeft","shouldManageMovingCursorInDirection","ArrowRight","_this$responder16","_this$responder17","Backspace","_this$responder18","shouldManageDeletingInDirection","Tab","_this$responder20","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","_this$responder26","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","_this$responder27","formatRemove","_this$responder29","getCurrentAttributes","removeCurrentAttribute","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","_this$delegate15","inputControllerWillPerformRedo","historyUndo","_this$delegate16","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$responder31","insertFromPaste","_this$responder32","_this$delegate19","_this$responder33","_this$delegate21","_this$responder34","_this$delegate23","_dataTransfer$files","_this$responder35","_this$delegate25","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$responder36","insertReplacementText","insertText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","createRange","setStart","setEnd","undoable","commands","do","undos","AttachmentEditorController","container","title","trixAction","didClickToolbar","didClickActionButton","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","didInputCaption","didKeyDownCaption","didChangeCaption","didBlurCaption","editingFigcaption","editCaption","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","pop","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","_this$delegate4","attachmentEditorDidRequestRemovalOfAttachment","attachmentEditorDidRequestDeselectingAttachment","_this$delegate5$attac","CompositionController","composition","didFocus","didBlur","didClickAttachment","documentView","focused","compositionControllerDidFocus","_this$delegate$compos","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","_this$delegate3$compo","getSerializableElement","isEditingAttachment","revision","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","_this$delegate6$compo","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","uninstallAttachmentEditor","_this$attachmentEdito2","compositionControllerWillUpdateAttachment","_this$delegate9","compositionControllerDidRequestRemovalOfAttachment","_this$delegate9$compo","compositionControllerDidRequestDeselectingAttachment","_this$delegate10$comp","toolbarButtonSelector","activeDialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","dialogName","showDialog","toolbarWillShowDialog","disabledInput","select","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","LineBreakInsertion","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","notifyDelegateOfInsertionAtRange","insertBlock","getCurrentTextAttributes","insertBlockBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","replaceHTML","getLocationRange","compositionShouldAcceptFile","attachmentForFile","insertAttachments","insertAttachment","attachmentText","textForAttachmentWithAttributes","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","removeAttachment","stopEditingAttachment","placeholderPosition","getPosition","hasCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock3","attributeLevel","ignoreLock","freezeSelection","thawSelection","hasFrozenSelection","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","canEditAttachment","expandSelectionForEditing","expandSelectionAroundCommonAttribute","getSelectedAttachments","positionIsCursorTarget","locationIsCursorTarget","_this$document$getPie","_this$getSelectedDocu","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","compositionDidRemoveAttachment","_this$delegate7","compositionDidAddAttachment","_this$delegate7$compo","compositionDidEditAttachment","_this$delegate8$compo","compositionDidChangeAttachmentPreviewURL","compositionDidStartEditingAttachment","compositionDidStopEditingAttachment","newDocument","compositionDidChangeCurrentAttributes","_this$delegate12$comp","_this$delegate13","compositionDidPerformInsertionAtRange","_this$delegate13$comp","utf16string","utf16position","UndoManager","undoEntries","redoEntries","description","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","redoEntry","snapshot","canUndo","canRedo","entry","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","LocationMapper","findLocationFromContainerAndOffset","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","collapsed","domRangeWithinElement","undefined","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","locationRangeDidChange","_this$delegate$locati","rangeStart","rangeEnd","_this$createLocationR","EditorController","editorElement","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","Date","getTime","ownerDocument","_this$editorElement$o","pickFiles","TrixToolbarElement","connectedCallback","customElements","define","makeEditable","handleEventOnce","configureContentEditable","disableObjectResizing","setDefaultParagraphSeparator","queryCommandSupported","_document$queryComman","execCommand","_document$queryComman2","cursorTargetStyles","TrixEditorElement","labels","label","_this$ownerDocument","getElementById","toolbarId","inputElement","_this$inputElement","_this$ownerDocument2","inputId","nextElementSibling","editorController","_this$editorControlle","_this$inputElement2","_this$inputElement3","defaultValue","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled"],"mappings":"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"}